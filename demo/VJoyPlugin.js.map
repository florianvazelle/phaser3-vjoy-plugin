{"version":3,"file":"VJoyPlugin.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;;;;;;;;;;;AC9OA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,eAAe,mBAAO,CAAC,iCAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;AC5JA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://VJoyPlugin/webpack/universalModuleDefinition","webpack://VJoyPlugin/./Joystick.js","webpack://VJoyPlugin/./VJoyPlugin.js","webpack://VJoyPlugin/external umd {\"root\":\"Phaser\",\"commonjs\":\"phaser\",\"commonjs2\":\"phaser\",\"amd\":\"phaser\"}","webpack://VJoyPlugin/webpack/bootstrap","webpack://VJoyPlugin/webpack/before-startup","webpack://VJoyPlugin/webpack/startup","webpack://VJoyPlugin/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VJoyPlugin\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"VJoyPlugin\"] = factory(root[\"Phaser\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_phaser__) {\nreturn ","/**\r\n * @author       Florian Vazelle <ponythugflorian@gmail.com>\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Phaser = require('phaser');\r\n\r\n/**\r\n * @classdesc\r\n * [description]\r\n *\r\n * @class Joystick\r\n * @memberOf Phaser.GameObjects\r\n * @constructor\r\n *\r\n * @param {Phaser.Scene} scene - [description]\r\n * @param {object} [settings] - [description]\r\n */\r\nvar Joystick = new Phaser.Class({\r\n    \r\n    Extends: Phaser.GameObjects.GameObject,\r\n\r\n    Mixins: [\r\n        Phaser.GameObjects.Components.Transform\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Joystick (scene, settings)\r\n    {\r\n        console.log('  [Joystick] constructor');\r\n\r\n        Phaser.GameObjects.GameObject.call(this, scene, 'Joystick');\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.GameObjects.Joystick#cursors\r\n         * @type {Phaser.Math.Vector2}\r\n         */\r\n        this.cursors = new Phaser.Math.Vector2(0, 0);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.GameObjects.Joystick#singleDirection\r\n         * @type {boolean}\r\n         * @default true\r\n         */\r\n        this.singleDirection = (settings.singleDirection === undefined) ? true : settings.singleDirection;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.GameObjects.Joystick#maxDistanceInPixels\r\n         * @type {number}\r\n         * @default 200\r\n         */\r\n        this.maxDistanceInPixels = (settings.maxDistanceInPixels === undefined) ? 200 : settings.maxDistanceInPixels;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.GameObjects.Joystick#device\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        this.device = (settings.device === undefined) ? 0 : settings.device;\r\n\r\n        // Instanciate the Joystick sprites.\r\n        var imageGroup = [];\r\n        imageGroup.push(this.scene.add.sprite(0, 0, settings.sprites.cap));\r\n        for (var i = 0; i < this.maxDistanceInPixels; i += 100)\r\n        {\r\n            imageGroup.push(this.scene.add.sprite(0, 0, settings.sprites.body));\r\n        }\r\n        imageGroup.push(this.scene.add.sprite(0, 0, settings.sprites.base));\r\n\r\n        // Manage the Joystick sprites with a Layer.\r\n        this.layer = this.scene.add.layer(imageGroup);\r\n        this.layer.setVisible(false);\r\n\r\n        // Set Joystick position to (0, 0).\r\n        this.setPosition(0, 0);\r\n        \r\n        // Disable update logic of this Joystick.\r\n        this.setActive(false);\r\n\r\n        // Add input callback on the current scene.\r\n        this.scene.input.on(Phaser.Input.Events.POINTER_DOWN, this.onKeyDown, this);\r\n        this.scene.input.on(Phaser.Input.Events.POINTER_UP, this.onKeyUp, this);\r\n\r\n        // Add current Joystick to the scene, it will be added to the Update List.\r\n        this.scene.add.existing(this);\r\n    },\r\n\r\n    /**\r\n     * The read-only deltaX of this Joystick.\r\n     *\r\n     * @name Phaser.GameObjects.Joystick#deltaX\r\n     * @type {number}\r\n     */\r\n    deltaX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.cursors.x;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The read-only deltaY of this Joystick.\r\n     *\r\n     * @name Phaser.GameObjects.Joystick#deltaY\r\n     * @type {number}\r\n     */\r\n    deltaY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.cursors.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.GameObjects.Joystick#onKeyDown\r\n     * \r\n     * @param {Phaser.Input.Pointer} pointer - \r\n     */\r\n    onKeyDown: function (pointer)\r\n    {\r\n        console.log('  [Joystick] onKeyDown', pointer);\r\n\r\n        // Enable update logic of this Joystick.\r\n        this.setActive(true);\r\n\r\n        // Show sprites.\r\n        this.layer.setVisible(true);\r\n        this.layer.each(function (gameObject)\r\n        {\r\n            gameObject.setScrollFactor(0);\r\n\r\n            gameObject.x = pointer.x;\r\n            gameObject.y = pointer.y;\r\n        }, this);\r\n\r\n        // Set position of this Joystick to the pointer position.\r\n        this.setPosition(pointer.x, pointer.y);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.GameObjects.Joystick#onKeyUp\r\n     * \r\n     * @param {Phaser.Input.Pointer} pointer - \r\n     */\r\n    onKeyUp: function (pointer)\r\n    {\r\n        console.log('  [Joystick] onKeyUp', pointer);\r\n        \r\n        // Disable update logic of this Joystick.\r\n        this.setActive(false);\r\n\r\n        // Hide sprites.\r\n        this.layer.setVisible(false);\r\n\r\n        // Reset cursors position.\r\n        this.cursors = new Phaser.Math.Vector2(0, 0);\r\n    },\r\n\r\n    /**\r\n     * Updates this Joystick.\r\n     * \r\n     * Update cursors to compute new delta vector and update position of the sprites.\r\n     *\r\n     * @method Phaser.GameObjects.Joystick#preUpdate\r\n     *\r\n     * @param {number} time - The current timestamp as generated by the Request Animation Frame or SetTimeout.\r\n     * @param {number} delta - The delta time, in ms, elapsed since the last frame.\r\n     */\r\n    preUpdate: function (time, delta)\r\n    {\r\n        console.log('  [Joystick] preUpdate', time, delta);\r\n\r\n        // Retrieve player input pointers.\r\n        var pointers = this.scene.sys.input.manager.pointers;\r\n        \r\n        // Get pointer corresponding to used device.\r\n        var pointer = pointers[this.device].position;\r\n        \r\n        // Compute delta pointer position.\r\n        var deltaX = pointer.x - this.x;\r\n        var deltaY = pointer.y - this.y;\r\n        \r\n        //\r\n        var dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n        \r\n        // \r\n        if (this.singleDirection)\r\n        {\r\n            if (Math.abs(deltaX) > Math.abs(deltaY))\r\n            {\r\n                deltaY = 0;\r\n            }\r\n            else\r\n            {\r\n                deltaX = 0;\r\n            }\r\n        }\r\n        \r\n        //\r\n        var angle = Math.atan2(deltaY, deltaX);\r\n        \r\n        // \r\n        if (dist > this.maxDistanceInPixels)\r\n        {\r\n            deltaX = Math.cos(angle) * this.maxDistanceInPixels;\r\n            deltaY = Math.sin(angle) * this.maxDistanceInPixels;\r\n        }\r\n\r\n        // Update cursors.\r\n        this.cursors = new Phaser.Math.Vector2(deltaX, deltaY);\r\n        \r\n        var index = 0;\r\n        this.layer.each(function (gameObject)\r\n        {\r\n            gameObject.x = this.x + (deltaX) * index / 3;\r\n            gameObject.y = this.y + (deltaY) * index / 3;\r\n            index++;\r\n        }, this);\r\n    }\r\n});\r\n\r\nmodule.exports = Joystick;\r\n","/**\r\n * @author       Florian Vazelle <ponythugflorian@gmail.com>\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Phaser = require('phaser');\r\nvar Joystick = require('./Joystick');\r\n\r\n/**\r\n * @classdesc\r\n * A class allowing to use a joystick in a computer or mobile game.\r\n * \r\n * This is an external plugin which you can include in your game by preloading it:\r\n *\r\n * ```javascript\r\n * this.load.scenePlugin('VJoyPlugin', 'plugins/VJoyPlugin.min.js', 'VJoyPlugin', 'vjoy'):\r\n * ```\r\n *\r\n * Once loaded you can create a virtual Joystick using the `vjoy` property of a Scene:\r\n *\r\n * ```javascript\r\n * var joystick = this.vjoy.add({\r\n *      sprites: {\r\n *          base: 'vjoy_base',\r\n *          body: 'vjoy_body',\r\n *          cap: 'vjoy_cap'\r\n *      },\r\n *      singleDirection: false,\r\n *      maxDistanceInPixels: 200,\r\n *      device: 0 // 0 for mouse pointer (computer), 1 for touch pointer (mobile)\r\n *   });\r\n * ```\r\n *\r\n * See the examples for more information.\r\n *\r\n * @class VJoyPlugin\r\n * @constructor\r\n *\r\n * @param {Phaser.Scene} scene - A reference to the Scene that has installed this plugin.\r\n * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the Plugin Manager.\r\n */\r\nvar VJoyPlugin = new Phaser.Class({\r\n\r\n    Extends: Phaser.Plugins.ScenePlugin,\r\n\r\n    initialize:\r\n    \r\n    function VJoyPlugin (scene, pluginManager)\r\n    {\r\n        console.log('[VJoyPlugin] constructor');\r\n\r\n        Phaser.Plugins.ScenePlugin.call(this, scene, pluginManager);\r\n\r\n        // Register the Joystick Game Object\r\n        pluginManager.registerGameObject('joystick', this.joystickFactory, this.joystickCreator);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Joystick Game Object and adds it to the Scene.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectFactory#joystick\r\n     * \r\n     * @param {boolean} singleDirection - The horizontal position of this Game Object.\r\n     * @param {number} maxDistanceInPixels - The vertical position of this Game Object.\r\n     * @param {number} device - The z position of this Game Object.\r\n     *\r\n     * @return {Phaser.GameObjects.Joystick} The Game Object that was created.\r\n     */\r\n    joystickFactory: function (settings)\r\n    {\r\n        console.log('[VJoyPlugin] joystickFactory');\r\n        console.assert(this instanceof Phaser.GameObjects.GameObjectFactory); // eslint-disable-line no-console\r\n\r\n        return new Joystick(this.scene, settings);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Joystick Game Object and returns it.\r\n     *\r\n     * @method Phaser.GameObjects.GameObjectCreator#joystick\r\n     * \r\n     * @param {object} config - The configuration object this Game Object will use to create itself.\r\n     * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n     *\r\n     * @return {Phaser.GameObjects.Joystick} The Game Object that was created.\r\n     */\r\n    joystickCreator: function (config, addToScene)\r\n    {\r\n        console.log('[VJoyPlugin] joystickCreator');\r\n        console.assert(this instanceof Phaser.GameObjects.GameObjectCreator); // eslint-disable-line no-console\r\n\r\n        if (config === undefined) { config = {}; }\r\n\r\n        var settings = Phaser.Utils.Objects.GetValue(config, 'settings', null);\r\n    \r\n        var joystick = new Joystick(this.scene, settings);\r\n    \r\n        if (addToScene !== undefined)\r\n        {\r\n            config.add = addToScene;\r\n        }\r\n    \r\n        Phaser.GameObjects.BuildGameObject(this.scene, joystick, config);\r\n    \r\n        return joystick;\r\n    },\r\n\r\n    /**\r\n     * This method is called automatically, only once, when the Scene is first created.\r\n     * Do not invoke it directly.\r\n     *\r\n     * @method VJoyPlugin#boot\r\n     * @private\r\n     */\r\n    boot: function ()\r\n    {\r\n        console.log('[VJoyPlugin] boot');\r\n\r\n        this.systems.events.once('destroy', this.destroy, this);\r\n        this.game.events.once('destroy', this.gameDestroy, this);\r\n    },\r\n\r\n    /**\r\n     * The Scene that owns this plugin is being destroyed.\r\n     *\r\n     * We need to shutdown and then kill off all external references.\r\n     *\r\n     * @method VJoyPlugin#destroy\r\n     * @private\r\n     */\r\n    destroy: function ()\r\n    {\r\n        console.log('[VJoyPlugin] destroy');\r\n\r\n        this.game = null;\r\n        this.scene = null;\r\n        this.systems = null;\r\n    },\r\n\r\n    /**\r\n     * The Game that owns this plugin is being destroyed.\r\n     *\r\n     * Dispose of the Scene Renderer and remove the Game Objects.\r\n     *\r\n     * @method VJoyPlugin#gameDestroy\r\n     * @private\r\n     */\r\n    gameDestroy: function ()\r\n    {\r\n        console.log('[VJoyPlugin] gameDestroy');\r\n\r\n        this.pluginManager.removeGameObject('joystick', true, true);\r\n        this.pluginManager = null;\r\n    }\r\n});\r\n\r\nmodule.exports = VJoyPlugin;\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE_phaser__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./VJoyPlugin.js\");\n",""],"names":[],"sourceRoot":""}